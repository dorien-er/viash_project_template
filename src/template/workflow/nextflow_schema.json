{
    "$schema": "http://json-schema.org/draft-07/schema",
    "title": "workflow",
    "description": "An example pipeline and project template.\n\nMultiple TSV files can be input, each with a 'column' identifier that\nshould be extracted. All extracted columns are then collated again.\n",
    "type": "object",
    "definitions": {
        "Dataset input": {
            "title": "Dataset input",
            "type": "object",
            "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple parameter sets to initialise a Nextflow channel.",
            "properties": {
                "param_list": {
                    "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml blob.",
                    "default": "",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$"
                }
            }
        },
        "arguments": {
            "title": "Arguments",
            "type": "object",
            "description": "No description",
            "properties": {
                "input": {
                    "type": "string",
                    "description": "Type: `file`, required, example: `file1.tar.gz`. Input TSV file",
                    "help_text": "Type: `file`, required, example: `file1.tar.gz`. Input TSV file"
                },
                "column": {
                    "type": "integer",
                    "description": "Type: `integer`, default: `2`. The column index to extract from the TSV input file",
                    "help_text": "Type: `integer`, default: `2`. The column index to extract from the TSV input file",
                    "default": "2"
                },
                "output": {
                    "type": "string",
                    "description": "Type: `file`, required, default: `$id.$key.output.tsv`, example: `output.tsv`. Output TSV file",
                    "help_text": "Type: `file`, required, default: `$id.$key.output.tsv`, example: `output.tsv`. Output TSV file",
                    "default": "$id.$key.output.tsv"
                }
            }
        },
        "nextflow input-output arguments": {
            "title": "Nextflow input-output arguments",
            "type": "object",
            "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
            "properties": {
                "publish_dir": {
                    "type": "string",
                    "description": "Type: `string`, required, example: `output/`. Path to an output directory",
                    "help_text": "Type: `string`, required, example: `output/`. Path to an output directory."
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/arguments"
        },
        {
            "$ref": "#/definitions/nextflow input-output arguments"
        }
    ]
}